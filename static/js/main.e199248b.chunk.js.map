{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["App","useState","setIsModelLoading","setModel","setImageURL","fileInputRef","useRef","loadModel","a","mobilenet","model","console","log","useEffect","className","type","accept","capture","onChange","e","files","target","length","url","URL","createObjectURL","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAAe,I,oBCiDAA,MA7Cf,WACE,MAA4CC,oBAAS,GAArD,mBAAuBC,GAAvB,WACA,EAA0BD,mBAAS,MAAnC,mBAAcE,GAAd,WACA,EAAgCF,mBAAS,MAAzC,mBAAiBG,GAAjB,WAGMC,GAFWC,mBACIA,mBACAA,oBACfC,EAAS,uCAAG,4BAAAC,EAAA,6DAChBN,GAAkB,GADF,kBAGQO,MAHR,OAGNC,EAHM,OAIZP,EAASO,GACTR,GAAkB,GALN,gDAOZS,QAAQC,IAAR,MACAV,GAAkB,GARN,yDAAH,qDA4Bf,OAPAW,qBAAU,WACJN,MACD,IAMH,sBAAKO,UAAU,MAAf,UACE,6DACE,qBAAKA,UAAU,cAAf,SACE,uBAAOC,KAAK,OAAOC,OAAO,UAAUC,QAAQ,SAASH,UAAU,cAAcI,SApBjE,SAACC,GACnB,IAAQC,EAAUD,EAAEE,OAAZD,MACR,GAAIA,EAAME,OAAS,EAAG,CAClB,IAAMC,EAAMC,IAAIC,gBAAgBL,EAAM,IACtChB,EAAYmB,QAEZnB,EAAY,OAc0FsB,IAAKrB,UCrCnHsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e199248b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect, useRef } from 'react';\nimport * as mobilenet from \"@tensorflow-models/mobilenet\";\nfunction App() {\n  const [isModelLoading, setIsModelLoading] = useState(false)\n  const [model, setModel] = useState(null)\n  const [imageURL, setImageURL] = useState(null);\n  const imageRef = useRef()\n  const textInputRef = useRef()\n  const fileInputRef = useRef()\n  const loadModel = async () => {\n    setIsModelLoading(true)\n    try {\n        const model = await mobilenet.load()\n        setModel(model)\n        setIsModelLoading(false)\n    } catch (error) {\n        console.log(error)\n        setIsModelLoading(false)\n    }\n  }\n\n  const uploadImage = (e) => {\n    const { files } = e.target\n    if (files.length > 0) {\n        const url = URL.createObjectURL(files[0])\n        setImageURL(url)\n    } else {\n        setImageURL(null)\n    }\n  }\n  useEffect(() => {\n        loadModel()\n    }, [])\n  // if (isModelLoading) {\n  //     return <h2>Model Loading...</h2>\n  // }\n  \n  return (\n    <div className=\"App\">\n      <h1>Image Recognition React App</h1>\n        <div className='inputHolder'>\n          <input type='file' accept='image/*' capture='camera' className='uploadInput' onChange={uploadImage} ref={fileInputRef} />\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n "],"sourceRoot":""}